//
//  {{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright Â© {{ year }} {{ developer.company }}. All rights reserved.
//

import Foundation
import Swinject

class {{ module_info.name }}Assembly: Assembly {

    func assemble(container: Container) {
        registerViewController(container: container)
        registerViewModel(container: container)
        registerInteractor(container: container)
        registerBuilder(container: container)
    }

    private func registerViewController(container: Container) {
        container.register({{ module_info.name }}ViewController.self) { res in
            let viewModel = res.resolve({{ module_info.name }}ViewModel.self)!
            return {{ module_info.name }}ViewController(viewModel: viewModel)
        }.inObjectScope(.transient)
    }

    private func registerViewModel(container: Container) {
        container.register({{ module_info.name }}ViewModel.self) { res in
            let dependency = {{ module_info.name }}ViewModel
                .Dependency(builder: res.resolve({{ module_info.name }}BuilderType.self)!,
                            interactor: res.resolve({{ module_info.name }}InteractorType.self)!)
            return {{ module_info.name }}ViewModel(dependency: dependency)
        }.inObjectScope(.transient)
    }

    private func registerInteractor(container: Container) {
        container.register({{ module_info.name }}InteractorType.self) { _ in
            {{ module_info.name }}Interactor()
        }.inObjectScope(.transient)
    }
    private func registerBuilder(container: Container) {
        container.register({{ module_info.name }}BuilderType.self) { _ in
            {{ module_info.name }}Builder()
        }.inObjectScope(.transient)
    }
}
