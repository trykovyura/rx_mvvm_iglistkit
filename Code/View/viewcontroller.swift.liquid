//
//  {{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright Â© {{ year }} {{ developer.company }}. All rights reserved.
//

import UIKit
import RxSwift
import RxCocoa
import NSObject_Rx
import RxIGListKit
import IGListKit

class {{ module_info.name }}ViewController: UIViewController, ViewCustomizable {

    typealias ViewType = {{ module_info.name }}View

    let viewModel: {{ module_info.name }}ViewModel

    typealias {{ module_info.name }}DataSource = RxListAdapterMoveDataSource<{{ module_info.name }}DataSection>

    lazy var dataSource = {{ module_info.name }}DataSource(sectionControllerProvider: { [weak self] (_, section) in
        switch section {
        case .section:
            let controller = {{ module_info.name }}SectionController()
            return controller
        }
    })

    lazy var adapter: ListAdapter = { [unowned self] in
        let adapter = ListAdapter(updater: ListAdapterUpdater(), viewController: self, workingRangeSize: 3)
        adapter.collectionView = contentView.collectionView
        return adapter
    }()

    init(viewModel: {{ module_info.name }}ViewModel) {
        self.viewModel = viewModel
        super.init(nibName: nil, bundle: nil)
    }

    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    // MARK: Life cycle
    override func loadView() {
        loadCustomView()
    }

    override func viewDidLoad() {
        super.viewDidLoad()
        viewModel.output.sections
                .drive(adapter.rx.objects(dataSource: dataSource))
                .disposed(by: rx.disposeBag)
    }
}
